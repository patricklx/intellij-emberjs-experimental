"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.severityForDiagnostic = exports.tagsForDiagnostic = exports.scriptElementKindToSymbolKind = exports.scriptElementKindToCompletionItemKind = void 0;
const typescript_1 = __importDefault(require("typescript"));
const vscode_languageserver_1 = require("vscode-languageserver");
/*
 * This module contains utilities for converting between conventions used
 * by the Language Server Protocol and TypeScript's language services interface.
 */
function scriptElementKindToCompletionItemKind(kind) {
    switch (kind) {
        case typescript_1.default.ScriptElementKind.primitiveType:
        case typescript_1.default.ScriptElementKind.keyword:
            return vscode_languageserver_1.CompletionItemKind.Keyword;
        case typescript_1.default.ScriptElementKind.variableElement:
        case typescript_1.default.ScriptElementKind.localVariableElement:
        case typescript_1.default.ScriptElementKind.letElement:
        case typescript_1.default.ScriptElementKind.constElement:
        case typescript_1.default.ScriptElementKind.alias:
        case typescript_1.default.ScriptElementKind.parameterElement:
            return vscode_languageserver_1.CompletionItemKind.Variable;
        case typescript_1.default.ScriptElementKind.memberVariableElement:
        case typescript_1.default.ScriptElementKind.memberGetAccessorElement:
        case typescript_1.default.ScriptElementKind.memberSetAccessorElement:
            return vscode_languageserver_1.CompletionItemKind.Field;
        case typescript_1.default.ScriptElementKind.functionElement:
        case typescript_1.default.ScriptElementKind.memberFunctionElement:
        case typescript_1.default.ScriptElementKind.constructSignatureElement:
        case typescript_1.default.ScriptElementKind.callSignatureElement:
        case typescript_1.default.ScriptElementKind.indexSignatureElement:
            return vscode_languageserver_1.CompletionItemKind.Function;
        case typescript_1.default.ScriptElementKind.enumElement:
            return vscode_languageserver_1.CompletionItemKind.Enum;
        case typescript_1.default.ScriptElementKind.moduleElement:
            return vscode_languageserver_1.CompletionItemKind.Module;
        case typescript_1.default.ScriptElementKind.classElement:
            return vscode_languageserver_1.CompletionItemKind.Class;
        case typescript_1.default.ScriptElementKind.interfaceElement:
            return vscode_languageserver_1.CompletionItemKind.Interface;
        case typescript_1.default.ScriptElementKind.warning:
        case typescript_1.default.ScriptElementKind.scriptElement:
            return vscode_languageserver_1.CompletionItemKind.File;
        case typescript_1.default.ScriptElementKind.directory:
            return vscode_languageserver_1.CompletionItemKind.Folder;
        case typescript_1.default.ScriptElementKind.jsxAttribute:
            return vscode_languageserver_1.CompletionItemKind.Property;
        default:
            return vscode_languageserver_1.CompletionItemKind.Text;
    }
}
exports.scriptElementKindToCompletionItemKind = scriptElementKindToCompletionItemKind;
function scriptElementKindToSymbolKind(kind) {
    switch (kind) {
        case typescript_1.default.ScriptElementKind.memberVariableElement:
        case typescript_1.default.ScriptElementKind.indexSignatureElement:
            return vscode_languageserver_1.SymbolKind.Field;
        case typescript_1.default.ScriptElementKind.memberGetAccessorElement:
        case typescript_1.default.ScriptElementKind.memberSetAccessorElement:
        case typescript_1.default.ScriptElementKind.memberFunctionElement:
            return vscode_languageserver_1.SymbolKind.Method;
        case typescript_1.default.ScriptElementKind.functionElement:
        case typescript_1.default.ScriptElementKind.localFunctionElement:
        case typescript_1.default.ScriptElementKind.constructSignatureElement:
        case typescript_1.default.ScriptElementKind.callSignatureElement:
            return vscode_languageserver_1.SymbolKind.Function;
        case typescript_1.default.ScriptElementKind.enumElement:
            return vscode_languageserver_1.SymbolKind.Enum;
        case typescript_1.default.ScriptElementKind.moduleElement:
            return vscode_languageserver_1.SymbolKind.Module;
        case typescript_1.default.ScriptElementKind.classElement:
        case typescript_1.default.ScriptElementKind.localClassElement:
            return vscode_languageserver_1.SymbolKind.Class;
        case typescript_1.default.ScriptElementKind.interfaceElement:
            return vscode_languageserver_1.SymbolKind.Interface;
        case typescript_1.default.ScriptElementKind.scriptElement:
            return vscode_languageserver_1.SymbolKind.File;
        case typescript_1.default.ScriptElementKind.jsxAttribute:
            return vscode_languageserver_1.SymbolKind.Property;
        case typescript_1.default.ScriptElementKind.constElement:
        case typescript_1.default.ScriptElementKind.enumMemberElement:
            return vscode_languageserver_1.SymbolKind.Constant;
        default:
            return vscode_languageserver_1.SymbolKind.Variable;
    }
}
exports.scriptElementKindToSymbolKind = scriptElementKindToSymbolKind;
function tagsForDiagnostic(diagnostic) {
    let tags = [];
    if (diagnostic.reportsUnnecessary) {
        tags.push(vscode_languageserver_1.DiagnosticTag.Unnecessary);
    }
    if (diagnostic.reportsDeprecated) {
        tags.push(vscode_languageserver_1.DiagnosticTag.Deprecated);
    }
    return tags;
}
exports.tagsForDiagnostic = tagsForDiagnostic;
function severityForDiagnostic(diagnostic) {
    if (diagnostic.reportsUnnecessary) {
        return vscode_languageserver_1.DiagnosticSeverity.Warning;
    }
    switch (diagnostic.category) {
        case typescript_1.default.DiagnosticCategory.Error:
            return vscode_languageserver_1.DiagnosticSeverity.Error;
        case typescript_1.default.DiagnosticCategory.Message:
            return vscode_languageserver_1.DiagnosticSeverity.Information;
        case typescript_1.default.DiagnosticCategory.Suggestion:
            return vscode_languageserver_1.DiagnosticSeverity.Hint;
        case typescript_1.default.DiagnosticCategory.Warning:
            return vscode_languageserver_1.DiagnosticSeverity.Warning;
    }
}
exports.severityForDiagnostic = severityForDiagnostic;
//# sourceMappingURL=protocol.js.map